// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CollectsDao is the data access object for table collects.
type CollectsDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns CollectsColumns // columns contains all the column names of Table for convenient usage.
}

// CollectsColumns defines and stores column names for table collects.
type CollectsColumns struct {
	Id              string // ID
	Symbol          string // 代币符号
	ContractAddress string //
	UserId          string // 用户id
	UserAddress     string // 用户地址
	RechargeHash    string // 充值hash
	HandfeeHash     string // 手续费hash
	CollectHash     string // 归集hash
	Value           string // 归集金额
	RechargeValue   string // 充值金额
	Status          string // 状态 fail 失败，wait_fee 待转手续费，process_fee 转手续费中，wait_collect 待归集,process_wait归集中，wait_notify 待通知,finish_notify通知完成
	CreateAt        string // 创建时间
	UpdateAt        string // 更新时间
}

//  collectsColumns holds the columns for table collects.
var collectsColumns = CollectsColumns{
	Id:              "id",
	Symbol:          "symbol",
	ContractAddress: "contract_address",
	UserId:          "user_id",
	UserAddress:     "user_address",
	RechargeHash:    "recharge_hash",
	HandfeeHash:     "handfee_hash",
	CollectHash:     "collect_hash",
	Value:           "value",
	RechargeValue:   "recharge_value",
	Status:          "status",
	CreateAt:        "create_at",
	UpdateAt:        "update_at",
}

// NewCollectsDao creates and returns a new DAO object for table data access.
func NewCollectsDao() *CollectsDao {
	return &CollectsDao{
		group:   "default",
		table:   "collects",
		columns: collectsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CollectsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CollectsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CollectsDao) Columns() CollectsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CollectsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CollectsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CollectsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
