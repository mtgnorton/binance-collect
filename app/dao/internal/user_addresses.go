// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserAddressesDao is the data access object for table user_addresses.
type UserAddressesDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns UserAddressesColumns // columns contains all the column names of Table for convenient usage.
}

// UserAddressesColumns defines and stores column names for table user_addresses.
type UserAddressesColumns struct {
	Id             string // ID
	Address        string // 以太坊地址
	ExternalUserId string // 外部用户id
	PrivateKey     string // 私钥
	Type           string // 类型:0平台生成,1外部导入
	CreateAt       string // 创建时间
	UpdateAt       string // 更新时间
}

//  userAddressesColumns holds the columns for table user_addresses.
var userAddressesColumns = UserAddressesColumns{
	Id:             "id",
	Address:        "address",
	ExternalUserId: "external_user_id",
	PrivateKey:     "private_key",
	Type:           "type",
	CreateAt:       "create_at",
	UpdateAt:       "update_at",
}

// NewUserAddressesDao creates and returns a new DAO object for table data access.
func NewUserAddressesDao() *UserAddressesDao {
	return &UserAddressesDao{
		group:   "default",
		table:   "user_addresses",
		columns: userAddressesColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserAddressesDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserAddressesDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserAddressesDao) Columns() UserAddressesColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserAddressesDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserAddressesDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserAddressesDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
