// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// QueueTaskLogDao is the data access object for table queue_task_log.
type QueueTaskLogDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns QueueTaskLogColumns // columns contains all the column names of Table for convenient usage.
}

// QueueTaskLogColumns defines and stores column names for table queue_task_log.
type QueueTaskLogColumns struct {
	Id          string // ID
	QueueTaskId string // 队列任务id
	Log         string // 错误日志
	FailAmount  string // 第几次失败
	CreateAt    string // 创建时间
	UpdateAt    string // 更新时间
}

//  queueTaskLogColumns holds the columns for table queue_task_log.
var queueTaskLogColumns = QueueTaskLogColumns{
	Id:          "id",
	QueueTaskId: "queue_task_id",
	Log:         "log",
	FailAmount:  "fail_amount",
	CreateAt:    "create_at",
	UpdateAt:    "update_at",
}

// NewQueueTaskLogDao creates and returns a new DAO object for table data access.
func NewQueueTaskLogDao() *QueueTaskLogDao {
	return &QueueTaskLogDao{
		group:   "default",
		table:   "queue_task_log",
		columns: queueTaskLogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *QueueTaskLogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *QueueTaskLogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *QueueTaskLogDao) Columns() QueueTaskLogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *QueueTaskLogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *QueueTaskLogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *QueueTaskLogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
