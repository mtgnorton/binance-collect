// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// WithdrawsDao is the data access object for table withdraws.
type WithdrawsDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns WithdrawsColumns // columns contains all the column names of Table for convenient usage.
}

// WithdrawsColumns defines and stores column names for table withdraws.
type WithdrawsColumns struct {
	Id              string // ID
	UserId          string // 内部用户id
	UserAddress     string // 用户地址
	ExternalOrderId string // 外部订单id
	ExternalUserId  string // 外部用户id
	Hash            string // hash
	Symbol          string // 代币符号
	ContractAddress string //
	From            string // 转出地址
	To              string // 转入地址
	Value           string // 转出金额
	Status          string // 状态 fail 失败，wait 待转出，process 转出中，wait_notify转出完成,finish_notify通知完成
	CreateAt        string // 创建时间
	UpdateAt        string // 更新时间
}

//  withdrawsColumns holds the columns for table withdraws.
var withdrawsColumns = WithdrawsColumns{
	Id:              "id",
	UserId:          "user_id",
	UserAddress:     "user_address",
	ExternalOrderId: "external_order_id",
	ExternalUserId:  "external_user_id",
	Hash:            "hash",
	Symbol:          "symbol",
	ContractAddress: "contract_address",
	From:            "from",
	To:              "to",
	Value:           "value",
	Status:          "status",
	CreateAt:        "create_at",
	UpdateAt:        "update_at",
}

// NewWithdrawsDao creates and returns a new DAO object for table data access.
func NewWithdrawsDao() *WithdrawsDao {
	return &WithdrawsDao{
		group:   "default",
		table:   "withdraws",
		columns: withdrawsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *WithdrawsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *WithdrawsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *WithdrawsDao) Columns() WithdrawsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *WithdrawsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *WithdrawsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *WithdrawsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
